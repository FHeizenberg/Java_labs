import java.util.*
import kotlin.system.exitProcess

object WinnieThePooh {
    /**
     * @author Novikov "iVanFromJapan" Ivan
     * @version 1.ü§®¬Ø\_(„ÉÑ)_/¬Øü§®        */
    /** –ü–æ–ª–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—á–µ–ª   */
    private var honeyPot = 0
    /** –ü–æ–ª–µ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ—Ä—Ü–∏–∏ –º–µ–¥–∞   */
    private const val PORTION_SIZE = 5
    /** –ü–æ–ª–µ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ—Ä—Ü–∏–∏, –ø—Ä–∏–Ω–æ—Å–∏–º–æ–π –ø—á–µ–ª–∞–º–∏   */
    private const val BEE_PORTION = 1
    /** –ü–æ–ª–µ –≤—Ä–µ–º–µ–Ω–∏ –º–µ–∂–¥—É –ø–æ–µ–¥–∞–Ω–∏–µ–º –º–µ–¥–∞   */
    private const val HONEY_CONSUMPTION_RATE = 2
    /** –ü–æ–ª–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏ –ø—á–µ–ª—ã   */
    private const val MAX_WAIT_TIME = 5000
    @JvmStatic
    fun main(args: Array<String>) {
        val bees = arrayOfNulls<Thread>(10)
        for (i in bees.indices) {
            bees[i] = Thread(Bee())
            bees[i]?.start()
        }
        while (true) {
            try {
                Thread.sleep((HONEY_CONSUMPTION_RATE * 1000).toLong())
            } catch (e: InterruptedException) {
                e.printStackTrace()
            }
            if (honeyPot < PORTION_SIZE) {
                println("–í–∏–Ω–Ω–∏-–ü—É—Ö –ø–æ–º–µ—Ä —Å –≥–æ–ª–æ–¥—É—Ö–∏(((((")
                exitProcess(0)
            }
            honeyPot -= PORTION_SIZE
            println("–í–∏–Ω–Ω–∏ –ø–æ–µ–ª—å, –º–µ–¥–∞ –æ—Å—Ç–∞–ª–æ—Å—å –≤ –≥–æ—Ä—à–∫–µ: $honeyPot")
        }
    }
    /**
     * –ö–ª–∞—Å—Å —Ä–∞–±–æ—Ç—ã –ø—á–µ–ª—ã –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
     */
    class Bee : Runnable {
        private val random = Random()
        override fun run() {
            while (true) {
                try {
                    Thread.sleep(random.nextInt(MAX_WAIT_TIME).toLong())
                } catch (e: InterruptedException) {
                    e.printStackTrace()
                }
                honeyPot += BEE_PORTION
                println("–ü—á–µ–ª–∞ –ø—Ä–∏–Ω–µ—Å–ª–∞ $BEE_PORTION –µ–¥–µ–Ω–∏—Ü –º–µ–¥–∞. –°–µ–π—á–∞—Å –º–µ–¥–∞ –≤ –≥–æ—Ä—à–∫–µ: $honeyPot")
            }
        }
    }
}